version: 2.1

references:

base_image: &base_image
  cimg/base:2020.01

working_directory: &working_directory
  ~/Project-1

default_config: &default_config
  docker:
    - image: *base_image
  working_directory: *working_directory

repo_cache_key: &repo_cache_key v1-repo-{{ .Branch }}-{{ .Revision }}

restore_repo: &restore_repo
  restore_cache:
    key: *repo_cache_key

save_repo: &save_repo
  save_cache:
    key: *repo_cache_key
    paths:
      - *working_directory

terraform_init: &terraform_init
  run:
    name: terraform init
    command: |
      cd product-a
      terraform init

environment: &environment
  parameters:
    config:
      type: env_var_name
      default: CONFIG
    region:
      type: env_var_name
      default: REGION

kubectl: &kubectl
  run:
    name: kubectl
    command: |
      apt update && apt install curl
      curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.16.8/2020-04-16/bin/linux/amd64/kubectl
      chmod +x ./kubectl
      sudo mv ./kubectl /usr/local/bin/kubectl
      kubectl version --client

      curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      unzip awscliv2.zip
      sudo ./aws/install
      aws --version

      curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.16.8/2020-04-16/bin/linux/amd64/aws-iam-authenticator
      chmod +x ./aws-iam-authenticator
      mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
      echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      aws-iam-authenticator help


tf-install: &tf-install
  run:
    name: tf-install
    command: |
      wget https://releases.hashicorp.com/terraform/0.12.28/terraform_0.12.28_linux_amd64.zip
      sudo unzip terraform_0.12.28_linux_amd64.zip -d /usr/local/bin/
      rm terraform_0.12.28_linux_amd64.zip
      terraform --version

jobs:
  plan:
    <<: *default_config
    <<: *environment
    steps:
      - checkout
      - *tf-install
      - *terraform_init
      - *save_repo
      - *restore_repo
      - run:
          name: terraform plan
          command: |
            cd product-a
            terraform plan -input=false -var-file=./config/${<< parameters.region >>}.tfvars -var-file=./config/common.tfvars -var-file=./config/${<< parameters.config >>}.tfvars

  apply:
    <<: *default_config
    <<: *environment
    steps:
      - *restore_repo
      - *tf-install
      - run:
          command: |
            cd product-a
            terraform apply --auto-approve -var-file=./config/${<< parameters.region >>}.tfvars -var-file=./config/common.tfvars -var-file=./config/${<< parameters.config >>}.tfvars
      - *kubectl
      - run:
          command: |
            aws eks --region us-east-1 update-kubeconfig --name main_eks
            kubectl get nodes
            kubectl create deployment my-dep --image=busybox
            kubectl get pod -w
  destroy:
    <<: *default_config
    <<: *environment
    steps:
      - *restore_repo
      - *tf-install
      - run:
          name: terraform destroy
          command: |
            cd product-a
            terraform destroy --auto-approve -var-file=./config/${<< parameters.region >>}.tfvars -var-file=./config/common.tfvars -var-file=./config/${<< parameters.config >>}.tfvars

workflows:
  version: 2
  Example_Workflow:
    jobs:
      - plan
      - hold-apply:
          type: approval
          requires:
            - plan
      - apply:
          requires:
            - hold-apply
      - hold-destroy:
          type: approval
          requires:
            - apply
          #  - kubectl
      - destroy:
          requires:
            - hold-destroy
          filters:
            branches:
              ignore:
                - develop
                - /feature-.*/
